## Server Configuration ##
server.port=13537
# 所有的请求接口都必须添加'/api'
server.servlet.context-path=/api

## DATABASE ##
spring.datasource.url=jdbc:mysql://47.95.235.8:3306/securejwt?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&createDatabaseIfNotExist=true
spring.datasource.username=noveluser
spring.datasource.password=Novel@22

## JPA / HIBERNATE ##
# 设置为true时，会在控制台上显示生成的SQL语句，方便调试和查看执行的SQL语句。
spring.jpa.show-sql=true
# 设置为create时，每次应用程序启动时，Hibernate会自动创建数据库表结构
spring.jpa.hibernate.ddl-auto=create
# 设置Hibernate使用的数据库方言为MySQL的方言，这样Hibernate就能正确地生成针对MySQL数据库的SQL语句。
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

## JWT 配置 ##
# 自定义密钥，用于生成令牌
jwt.secret = 2b44b0b00fd822d8ce753e54dac3dc4e06c2725f7db930f3b9924468b53194dbccdbe23d7baa5ef5fbc414ca4b2e64700bad60c5a7c45eaba56880985582fba4
# 过期时间（毫秒），36000000毫秒 = 36000秒 = 10小时
jwt.expiration = 36000000

## Spring Security 配置##
#Disable Spring Security
#spring.autoconfigure.exclude[0]=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

## logging Configuration ##
logging.file.name=logs/securejwt.log
logging.logback.rollingpolicy.max-file-size= 100KB
logging.level.root=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %-5level - %logger{36} - %msg%n

# actuator 配置（对本项目非必需）
management.endpoint.shutdown.enabled=true
# 把shutdown和health, info的web访问都打开
management.endpoints.web.exposure.include=*
# management.endpoints.web.exposure.include=shutdown